<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prepare the GCP Environment on JFrog DevOps on GCP Workshop</title>
    <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup.html</link>
    <description>Recent content in Prepare the GCP Environment on JFrog DevOps on GCP Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get a GCP Environment</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/411_get_gcp_environment.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/411_get_gcp_environment.html</guid>
      <description>If you have your own Google account and have your own GCP environment, skip this step.
 This workshop requires a GCP environment. If this is a JFrog and Google hosted event, your instructor will provide a link and an activation code. The following steps walk through the process of obtaining a GCP environment using the provided link and activation code. Otherwise, use your own GCP environment and skip this step.</description>
    </item>
    
    <item>
      <title>Download the Workshop Code</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/412_download_workshop_code.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/412_download_workshop_code.html</guid>
      <description>The workshop code is located at https://github.com/jfrogtraining/gcp-gke-workshop GitHub repository. We will clone this repository locally in order to pull the required workshop files and scripts.
 Click on the Google Cloud Shell button at the top right of the console to open Google Cloud Shell terminal in your browser.  Click the Continue button and wait a few moments for you Google Cloud Shell Machine to be ready.  Clone this repository to your local directory with the following command.</description>
    </item>
    
    <item>
      <title>Create GKE Clusters</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/413_create_gke_cluster.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/413_create_gke_cluster.html</guid>
      <description>In this section, we will create GKE Clusters in our Google Cloud Shell using the gcloud CLI.
The gcloud command-line interface is the primary CLI tool to create and manage Google Cloud resources. You can use this tool to perform many common platform tasks either from the command line or in scripts and other automations.
  In your Google Cloud Shell, execute the following command to set an environment variable for the GCP environment project ID.</description>
    </item>
    
    <item>
      <title>Create a Cloud Deploy Pipeline</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/414_cloud_deploy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/414_cloud_deploy.html</guid>
      <description>In this section, we will create a Cloud Deploy pipeline to deploy our app in test, stage and prod environments.
  First select Cloud Deploy from your product catalog and enable it if it&amp;rsquo;s already not enabled.
  Execute the following command to add clouddeploy.jobRunner role to the serice account.
  gcloud projects add-iam-policy-binding $PROJECT_ID \ --member=serviceAccount:$(gcloud projects describe $PROJECT_ID \ --format=&amp;quot;value(projectNumber)&amp;quot;)-compute@developer.gserviceaccount.com \ --role=&amp;quot;roles/clouddeploy.jobRunner&amp;quot; Now execute the below command to add the Kubernetes Developer permissions.</description>
    </item>
    
    <item>
      <title>Create a Cloud Build Trigger</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/415_cloud_trigger.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/41_gcp_environment_setup/415_cloud_trigger.html</guid>
      <description>In this section, we will create a Cloud Build trigger which will trigger automatically the cloud build file on any push to the github repo and deploy to test.
  Navigate to Cloud Buiild and select Triggers from the left pane.
  Click on + CREATE TRIGGER and give it a name workshop.
  Select CONNECT NEW REPOSITORY in source, which will take you to authenticate your github repo from where you want to trigger cloud build.</description>
    </item>
    
  </channel>
</rss>
