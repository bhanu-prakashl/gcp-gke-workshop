<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JFrog Platform Setup on JFrog DevOps on GCP Workshop</title>
    <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup.html</link>
    <description>Recent content in JFrog Platform Setup on JFrog DevOps on GCP Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get a Free JFrog Platform Instance</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/421_jfrog_free.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/421_jfrog_free.html</guid>
      <description>If you do not have access to a JFrog Platform instance, use the JFrog Platform Cloud Free Tier to get your own JFrog Platform instance with Artifactory and Xray.
When signing up for the JFrog Platform Cloud Free Tier, ensure that you select Google Cloud.
  JFrog Platform Cloud Free Tier   </description>
    </item>
    
    <item>
      <title>Generate an API Key</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/422_api_key.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/422_api_key.html</guid>
      <description>Remember your username and API key. We will use it again with the JFrog CLI and to set up GKE to deploy your image.
  Go to your JFrog Platform instance at https://[server name].jfrog.io. Refer to your JFrog Free Subscription Activation email if needed. Substitute your server name.  Login to your JFrog Platform instance with your credentials.  Once logged into your JFrog Platform instance, you will be presented with the landing page.</description>
    </item>
    
    <item>
      <title>Create NPM and Docker Repos</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/423_create_repos.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/423_create_repos.html</guid>
      <description>Next, we will set up a NPM and Docker repositories in Artifactory.
 In your JFrog Platform instance go to Administration ► Repositories ► Repositories.  Click on New Local Repository on the right.  For package type, select Docker.  Specify clouddays for the Repository Key.   Click Create Local Repository.
  Next, we must create NPM repositories that will be used for NPM dependencies. JFrog provides an easy Quick Setup option for this.</description>
    </item>
    
    <item>
      <title>Configure a Xray Index</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/424_configure_xray_index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/424_configure_xray_index.html</guid>
      <description>Next, we will configure Xray to index our new Docker repository. This allows Xray to automatically analyze all the artifacts in this repository.
 Let&amp;rsquo;s configure Xray to index the new Docker repository automatically. Go to Administration ► Xray ► Settings.   Click on Indexed Resources.
  Click on Add a Repository on the right.
  Move the clouddays repository into the Included Repositories.  Click Save. You have now configured Xray to index the clouddays repository.</description>
    </item>
    
    <item>
      <title>Create a Xray Policy</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/425_create_xray_policy.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/425_create_xray_policy.html</guid>
      <description>Next, we will create an Xray security policy that sets the types of security violations to alert on.
 Go to Administration ► Xray ► Watches &amp;amp; Policies ► Policies.   Click on Create a Policy.
  Give the policy a name like default-security and a description.
   Click on New Rule at the right.
  Give the rule a name like high-security-rule.
  For Minimal Severity, specify High.</description>
    </item>
    
    <item>
      <title>Create a Xray Watch</title>
      <link>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/426_create_xray_watch.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jfrogtraining.github.io/gcp-gke-workshop/4_workshop_setup/42_jfrog_setup/426_create_xray_watch.html</guid>
      <description>Next, we will create an Xray security watch to scan our new Docker repository.
 Go to Administration ► Xray ► Watches &amp;amp; Policies ► Watches.   Click on Set up a Watch.
  Give the watch a name like clouddays-docker-repo-watch and a description.
   Click on Add Repositories.
  Move the clouddays repository into the Included Repositories.
   Click Save.
  Scroll down to the Assigned Policies and click on Manage Policies.</description>
    </item>
    
  </channel>
</rss>
